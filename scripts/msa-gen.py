virusFamily = "harebot"


pairs ={
    	"pair1":{
		"3":"FGGDKNBBCCC38CC0DDGBBBVV-BBHFFBDEJNFGGDKNCCCBDBEV*VB9DFBHFDBDDTFV4DBBBI4DAAAHDDIYDADAHBNDMBAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGDDDHWW3BBCCHDECBDBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBHBBBAAAA--BAAAAAAAABAAAAAAAAAAAAAAAAAAAABBAAAAAAAAAAAAAAAAAAAAAAABBAAAAAAAABAAAAAAAAAAAAAAABBAAAAAAAAABAAAAAAAAAAAAAAAAABAAAAAAAABAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAABAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAABAAAAAAAAAAAABBAAAAAAAAAAAAAABAAAAAA-AAAABBAAAAAAAAAABAAAAAAAA-AAAAAAAAABAAAAAAAAAAABBBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBBBACDDBBABMGBXDACAEAECAECAEAECAEAEAEAEAEAECAAACAEAA-AEAAAECAEAECAECAECACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA----------------------GC8DAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGGGDAAAAID4HDDBBC-GGFPRGFPRPRIFCHHFCCFBZ7QECCECLVVHDN3BG7BC3BBCCAAAAAAAAAAAAAAAAAA2626",
        "9":"FGGDKNBB----8CC0DDGBBBVVFBBHFF-DEJNFGGDKNCCCBDBEV*VB9DFBHFDBDDTFV4DBBBI4DAAAHDDIYDADAHBNDMB-AAAAAAAAAAAAAAAAAAAAB---AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGDDDHWW3BBCCHDECBDB--AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBHBBBAAAAAABAAAAAAAABAAAAAAAAAAAAAAAAAAAABBAAAAAAAAAAAAAAAAAAAAAAABBAAAAAAAABAAAAAAAAAAAAAAABBAAAAAAAAABAAAAAAAAAAAAAAAAABAAAAAAAABAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAABAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAB---AAAAAAAAAAABAAAAAAAAAAAAAAAAAB--AAAAAAAAAA-B----AAAAAAAAAAB------BAAAA--AAAAAAAAAABAAAAAAAABAAAAAAAAABAAAAAAAAAAA-BBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA----BACDDBBABMGBXDACAEAECAECAEAECAEAEAEAEAEAECAAAC----CAEAAAE-AEAECAECAE-ACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGC8D-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGGGDAAAAID4HDD-BCBGGFPRGFPRPRIFCHHFCCFBZ7QECCECLVVHDN3BG7BC3BBCCAAAAAAAAAAAAAAAAAA2626"
        },
      "pair2":{
		"3":"FGGDKNBBCCC38CC0DDGBBBVV-BB-HFFB-DEJNFGGDKNCCCBDBEV*VB9DFBHFDBDDTFV4DBBBI4DAAAHDDIYDADAHBNDMBAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGDDDHWW3BBCCH-DECBDBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBHBBBAAAABAAAAAAAABAAAAAAAAAAAAAAAAAAAABBAAAAAAAAAAAAAAAAAAAAAAABBAAAAAAAABAAAAAAAAAAAAAAABBAAAAAAAAABAAAAAAAAAAAAAAAAABAAAAAAAABAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAABAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAABAAAAAAAAAAAABBAAAAAAAAAAAAAABAAAAAAAAAABBAAAAAAAAAABAAAAAAAAAAAAAAAAABAAAAAAAAAAABBBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBBBACDDBBABMGB---XDACAEAECAECAEAECAEAEAEAEAEAECAAACAEAA-AEAA-AECAEAECAECAECACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGC8DAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGGGDAAAAID4HDDBBCGGFPRGF-PRPRIFCHHF-CCFBZ7QECCECLVVHDN3BG7BC-3-BBCCAAAAAAAAAAAAAAAAAA2626",
        "6":"FGGDKN------8-C0DDGBBBVVFBBBHFFBBDEJNFGGDKNCCCBDBEV*VB9DFBHFDBDDTFV4DBBBI4DAAAHDDIYDADAHBNDMB---AAAAAAAAAAAAAAAAAAB----------AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGDDDHWW3BBCCHBDECBDB--------AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBHBBBAAAABAAAAAAAABAAAAAAAAAAAAAAAAAAAABBAAAAAAAAAAAAAAAAAAAAAAABBAAAAAAAA-AAAAAAAAAAAAAAABBAAAAAAAAABAAAAAAAAAAAAAAAAABAAAAAAAABAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAABAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBAAAAAAAAAAAAAAAAAAAAAAB-----AAAAAAAAAAB----AAAAAAAAAAB---------------AA-AAAAAAAAAAAABB-------AAAAAAA-AAAAAAAAAA-B--AAAAAAAAB--------AAAAAAAAABAAAAAAAAAAA-BBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA--BBBACDDBBABMGBAAAXDACAEAECAECAEAECAEAEAEAEAEAE-----AE--CAE--CAECAEA--A--AECA-------------CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC-----------AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGC8D--------AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGGGDAAAAID4HDD--CGGFPRGFBPRPRIFCHHFBCCF-Z7QECCECLVVHDN3BG-B-73CBB-CAAAAAAAAAAAAAAAAAA26-6"
        },
    "pair3":{
		"0":"FGGDKN8C0DDGBBBVVFBBBHFFBBDEJNFGGDKNCCCBDBEV*VB9DFBHFDBDDTFV4DBBBI4DAAAHDDIYDADAHBNDMBAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGDDDHWW3BBCCHBDECBDBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBHBBBAAAABAAAAAAAABAAAAAAAAAAAAAAAAAAAABBAAAAAAAAAAAAAAAAAAAAAAABBAAAAAAAAAAAAAAAAAAAAAAABBAAAAAAAAABAAAAAAAAAAAAAAAAABAAAAAAAABAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAABAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAABAAAAAAAAAABAAAAAAAAAAAAAABBAAAAAAAAAAAAAAAAABAAAAAAAABAAAAAAAAABAAAAAAAAAAABBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBACDDBBABMGBAAAXDACAEAECAECAEAECAEAEAEAEAEAEAECAECAECAEAAAECACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC--AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGC8DAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGGGDAAAAID4HDDCGGFPRGFBPRPRIFCHHFBCCFZ7QECCECLVVHDN3BGBB7C3-BBCAAAAAAAAAAAAAAAAAA266",
        "6":"FGGDKN8C0DDGBBBVVFBBBHFFBBDEJNFGGDKNCCCBDBEV*VB9DFBHFDBDDTFV4DBBBI4DAAAHDDIYDADAHBNDMBAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGDDDHWW3BBCCHBDECBDBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBHBBBAAAABAAAAAAAABAAAAAAAAAAAAAAAAAAAABBAAAAAAAAAAAAAAAAAAAAAAABBAAAAAAAAAAAAAAAAAAAAAAABBAAAAAAAAABAAAAAAAAAAAAAAAAABAAAAAAAABAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAABAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAABAAAAAAAAAABAAAAAAAAAAAAAABBAAAAAAAAAAAAAAAAABAAAAAAAABAAAAAAAAABAAAAAAAAAAABBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBACDDBBABMGBAAAXDACAEAECAECAEAECAEAEAEAEAEAEAECAECAECAEAAAECACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGC8DAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGGGDAAAAID4HDDCGGFPRGFBPRPRIFCHHFBCCFZ7QECCECLVVHDN3BG-B7-3CBBCAAAAAAAAAAAAAAAAAA266"
        },
    "pair4":{
		"0":"FGGDKN8C0DDGBBBVVFBBBHFFBBDEJNFGGDKNCCCBDBEV*VB9DFBHFDBDDTFV4DBBBI4DAAAHDDIYDADAHBNDMBAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGDDDHWW3BBCCHBDECBDBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBHBBBAAAABAAAAAAAABAAAAAAAAAAAAAAAAAAAABBAAAAAAAAAAAAAAAAAAAAAAABBAAAAAAAAAAAAAAAAAAAAAAABBAAAAAAAAABAAAAAAAAAAAAAAAAABAAAAAAAABAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAABAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAABAAAAAAAAAABAAAAAAAAAAAAAABBAAAAAAAAAAAAAAAAABAAAAAAAABAAAAAAAAABAAAAAAAAAAABBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBACDDBBABMGBAAAXDACAEAECAECAEAECAEAEAEAEAEAEAECAECAECAEAAAECACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGC8DAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGGGDAAAAID4HDDCGGFPRGFBPRPRIFCHHFBCCFZ7QECCECLVVHDN3BGBB7C3BBCAAAAAAAAAAAAAAAAAA266",
        "7":"FGGDKN8C0DDGBBBVVFBBBHFFBBDEJNFGGDKNCCCBDBEV*VB9DFBHFDBDDTFV4DBBBI4DAAAHDDIYDADAHBNDMBAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGDDDHWW3BBCCHBDECBDBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBHBBBAAAABAAAAAAAABAAAAAAAAAAAAAAAAAAAABBAAAAAAAAAAAAAAAAAAAAAAABBAAAAAAAAAAAAAAAAAAAAAAABBAAAAAAAAABAAAAAAAAAAAAAAAAABAAAAAAAABAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAABAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAABAAAAAAAAAABAAAAAAAAAAAAAABBAAAAAAAAAAAAAAAAABAAAAAAAABAAAAAAAAABAAAAAAAAAAABBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBACDDBBABMGBAAAXDACAEAECAECAEAECAEAEAEAEAEAEAECAECAECAEAAAECACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGC8DAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGGGDAAAAID4HDDCGGFPRGFBPRPRIFCHHFBCCFZ7QECCECLVVHDN3BGBB7C3BBCAAAAAAAAAAAAAAAAAA266"
        },
     "pair5":{
		"0":"FGGDKN8C0DDGBBBVVFBBB--H--FF---------------------BB-------D-EJN---------FGGDKNCCCBDBEV*V--B9DFBHFDBDDTFV4DBBBI4DAAA----HDDIYDADAHBNDMBAAAAAAAAAAAAAAAAAA-BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA------------------------GDDD-HWW3---B----BCC-H-B----------D------EC----B---------D-BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB--B-----------HBBBAAAA-BAAAAAAAABAAAAAAAAAAAAAAAAAAAA-BBAAAAAAAAAAAAAAAAAAAAAAABBAAAAAAAAAAAAAAAAAAAAAAA-B--BAAAAAAAAABAAAAAAAAAAAAAAAAABAAAAAAAABAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAA-BAAAAAAAAAAAAAAAA----BAAAAAAAA------BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA-------B----BAAAAAAAAAAAAAAAAAAAAAA------------------------BAAAAAAAAAA--BAAAAAAAAAA--BAAAAAAAAAAAAAA--B------BAAAAAAAAAAAAAAAAA---BAAAAAAAA--BAAAAAAAAA--BAAAAAAAAAAA---B---BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA--B---B--BACDD--B----BA--BMG--BAAAXDACAEAECAECAEAECAEAEAEAEAEAEAECAECAECAEAAAECACCC----------------C--C--C--C--C-------C-C-C-C-C-C-C-C-C-C---C-C-C-C-C--C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C---C-C-C-C-C---C-C-C-C-C--C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C-C--C-C-C-C-C--C-C-C-C-C--C-C-C-C-C-C-C-C-C-CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG-C8DAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGGGDAAAAID4HDD-CGGFPRGFBPRPRIF-CHHFB-C-CFZ7QE-C-CE-CLVVHDN3BGBB7-C3BB-CAAAAAAAAAAAAAAAAAA266-",
        "5":"FGGDKN------BBB---BBBBBHHEFFFFFFFFFFFFHGDD*H*UUVFBB1FHBLVVDCEJN**LVDJN26FGGDKN---B-BE---EEB---B---B-------BBB------FEKEH--------HB---B------------------EB---------------------------------------------------------FFFEFFFFFFFFEFEBEEEFFEEHG-DD*H---*UUBHW*EB--EHEBEFFEFFEEGGDNCCCFVECCCCCBBBBBBBEEBDEB----------------------------------BD*B3EEUEE4VVGBHBBB----DB--------B--------------------EBB-----------------------BB-----------------------FB*FB---------B-----------------B--------B-------------B-------------------3B----------------EC26B--------EI**GEB------------------------------EHVU*EEBEF8QB----------------------EEEIIIIIIIIIIIIIIIIIIIIHB----------IHB----------IHB--------------IHBEDEEIHB-----------------IIHB--------IHB---------IHB-----------IIHBIIHB-------------------------------IHBIIHBIHB----IHBIIIHB-IHB--IHB----------------------------------------------------IHBIHBIIHBIHIBBBCJBCJBCJBCJBCJ*D3B*BCJCJCJCJCJCJCJCJCJCJBBCJCJCJCJCJBCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJBBCJCJCJCJCJBBCJCJCJCJCJHCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJBCJCJCJCJCJBCJCJCJCJCJBCJCJCJCJCJCJCJCJCJC-----------------------------------------------------------------------------------------------------------------------------JC---------------------------------------------------JC--------------JC----JCJC-----JCJC-JC------------JC---JC---------------------J"
        },
    "pair6":{
		"4":"FGGDKNBBCCC3BBB--------------------DAAAAA--------BB---B-----------------------BB---BB----F-----B---F*FF--------------------HGDD-H---BDH-----HDDM-B--------GBG-------------BBGCIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII--------DAII---DAII-----------------DA------------------------I---------------------IDAIIIIDAIIDAIIDAIIIIDAIIIIDAIIDAI--I--I--I---DA--I--IDAAAI--IDA--I--II--II--IDA--IIDA--I--IDA--IIDAI--IDA--I--IDA--I--IAAAI--IDA-IGBFBB8HQ--BLVVHDE-JN26FKBE--B--BFFEGG---DN----C-C-CBEEFEEBEHEFFEFVEE4D-C-C-C-C-CBBBBBBBBBBDEVV-----BHB----------B----------------------------------------------------------------------------------------------------------------------------------BBLVVHD-JNFK--------BFFB----------HBBFFGGDNC-C-CBE-CFF26BBBBBBBBLBJNBNB----------------------------------------------------B----------B----------BC26---------------------------------------",
        "5":"FGGDKNBB----BBBBBBHHEFFFFFFFFFFFFHGD-----D*H*UUVFBB1FHBLVVDCEJN**LVDJN26FGGDKNBBEEEBBBBBBFEKEHHBBEBF-FFEFFFFFFFFEFEBEEEFFEEHGDD*H*UUB-HW*EBEH---EBEFFEFFEEG-GDNCCCFVECCCCCBB-------------------------------------------BBBBBEEBD---EBBD---*B3EEUEE4VVGBHBBBD-BBEBBBBFB*FBBBBB3BEC26BEI**GEBEHVU*EEBEF8QBEEEI--IIII--II--II--IIII--IIII--II--IHBIHBIHBIHBED-EEIHBI----IHBI--HBIHBIIHBIIHBI--HBII--HBIHBI--HBII--IHBI--HBIHBI--HBIHBI---IHBI--HI-B-BB---CJB------CJ-----B-CJBCJB-----CJ*D-3B*BCJCJC-------------------JCJCJCJCJC--------------JCJCJB-BCJCJCJCJCJBCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJBB-----CJ---CJCJCJCJB--BCJCJCJCJCJH--------CJCJC--JC--------------J----CJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJBCJCJCJCJCJBCJCJCJCJCJBC--JCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJCJ"
        },
    "pair7":{
		"1":"FGGDKNBB---3BBB------BBBBBBB*---*FFHGDDH*BDRHHRRDRDMBGBGBBGCOORRIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIDAIIDAIIDAIIDAIIIIDAIIDAIIDAIIIIDAIIIIDAIIDAIIIIDAIIDAAAIIDAIIIIIIDAIIDAIIDAIIDAIIIIDAIIDAIIDAAAI----GBBHFB8BZ7--Q-LVVHDEJN26FKBEBBFFEGGDNCCCBEEFEEBE-----------CCCCCBBBBHBBBDBB-DEEFVVFEBHFVEE4BBBBLVVHDJNFKBFFBHBBFFGGDNCCCBEC2F--6BBBBBBBBBL-JNBNFBBBBBBBBC26",
        "4":"FGGDKNBBCCC3BBBDAAAAABBBBBBB-FBF*FFHGDDH-BD-HH--D-DMBGBGBBGC----IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIDAIIDAIIDAIIDAIIIIDAIIDAIIDAIIIIDAIIIIDAIIDAIIIIDAIIDAAAIIDAIIIIIIDAIIDAIIDAIIDA--IIDAIIDAII-AAAIIDAIG-B-FB-B--8HQBLVVHDEJN26FKBEBBFFEGGDNCCCBEEFEEBEHEFFEFVEE4DCCCCCBBBB-BBB-BBBD-E-VV--BH-----BBBBLVVHDJNFKBFFBHBBFFGGDNCCCBEC-FF26-BBBBBBBBLBJNBN-----BBBBC26"
        },
	"pair8":{
		"2":"FGGDKNBBH----BBB------BB-----FHH-F-FF-----B------BCCC-BF-BDB-------------------------------------------D1---------------------------------------------------------------------------------------------------F---H-B3----D-------B-B-FF-GDDGI-------------HQ-F8D-E------CC---BB-------------H----LVV-DE-N3--B--------G4-------EC----BB3BBBBBB-B333--B33333-BB3333333-----",
        "4":"FGGDKNBB-CCC3BBBDAAAAABBBBBBBF--BF*FFHGDDHBDHHDDMB---GB-GB-BGCIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIID-AIIDAIIDAIIDAIIIIDAIIDAIIDAIIIIDAIIIIDAIIDAIIIIDAIIDAAAIIDAIIIIIIDAIIDAIIDAIIDAIIDAIIDAIIAAAIIDAIGBFBB8HQB-LVVHDEJN26FKBEBBFFEG--G-DNCCCBEEFEEBEH-EF--FEFVEE4DCCCCCBBBBBBBBBBDEVVBHBBBBLVVHD-JN-FKBFFBHBBFFG-GDNCCCBECFF26BB-BBBBBBLB---JNB-----NBB-------BBC26"
        },
	"pair9":{
		"2":"FGGDKNBBHB----BB-B--BFHHFFFB----BC-C-C----------------BF----BD--B-----D1-FH-B3DBB--------FFGDDG---I--H------Q----F-8-DE---CC--B-B------------H-LVVDEN3BG4ECB---------B3BBBBBB------B333B3----------------3----------3--3---------3B-----B3333333-",
        "8":"FGGDKN-B-BFCCCBBLBVVB--H-FFBDCEJBCJCJCJCJCJCJN26NCCHEEBFEEEEB-FEBP*R*ED1EF-*B-DBB*EHP*R3EFFGDDGEEEI*EH***EZ7QEEEEFE8BDEEEECC**B*BEB*BEEEEEEEEHEL-VD-N3BG-EC-4EE******B3--BBBB*****EB---B-****EE*EE*******3**********3**3*********3-*****B-------*"
        }
}

#Consolidated trunc 60
# pairs ={
# 	"pair1":{
# 		"1":"FGGDBBX-N38DBBBFFF999DHHBFHBFGGD---BDBE----9DFHBFDBDDTFB-4DBBBI4D-HDDI-----------------",
# 		"6":"FGGD---KN-----------------------CCCBDBEV*VB9DFHBFDBDDTF-V4DBBBI4DAHDDIYDADAHBDMBAAAAAAA"
# 	},
# 	"pair2":{
# 		"1":"FGGD---BBXN38DBBBFFF99-9D-HHBFHBFGGD--BD-BE9D----FHBFDB-DDTFB4-DB-B--BI4DHD----DI--",
# 		"2":"FGGDKNHBB-----BBB-----B9DBHHB--B--G-3MB-GB---3***F--F--GDD--B-GDBIBF8B---H-Z7QBD-26"
# 	},
#    "pair3":{
# 		"2":"FGGDKNH-B-B-B------BBB-9DBHHBBG3MBGB3***FFGDDBGDBIBF8BHZ7QBD------------------2-6",
# 		"8":"FGGDKN-FBFBHBFFDNEXBBBB9D-HHBBG--B-B---*--GDD-G----F-------DDFFSSSSSSSSSSSSSSF2*6"
# 	},
# 	"pair4":{
# 		"0":"FGGDKNB-B3BBBBB--B--BB---B-B-**-FFHGDDH*BDRHHRRDR-DMBG-BG--B----BGCOORRIIIIIIII---",
# 		"2":"FGGDKN-HB-BBBBB9DBHHBBG3MBGB3***FF-GDD--B--------GD-B-IB-F8BHZ7QB--------------D26"
# 	},
	
# 	"pair5":{
# 		"2":"FGGDKNH-B-BBBBB9---D--BHHBBG3M--BGB3***F-----FGD-D-----BGDBIB---------F8BHZ7QB-D26-",
# 		"5":"FGGDKN-EBPBBBBB-8C0DDGB--BB---VVB-B-----HDEJNFG-GDKNCCCB-DB-BBBEV*VB9DF-BH----FD--B"
# 	},
# 	"pair6":{
# 		"2":"FGGDKNHBBB-B-BB9DBHHBBG3MBGB3***FFGD-DBGDBIBF8BHZ7QBD2------6",
# 		"9":"FGGDKN----VBVBB--B-HBB---B-B----FF--FD--D------H------3HW*G36"
# 	},
# 	"pair7":{
# 		"2":"FGGDKNHBBBBBB9DBHHBBG3MBGB3***FF--------GDDBGDBIB------F8B---HZ7QB------D26---------",
# 		"7":"FGGDKNHBBBBBB--B--BB---B-B----FFFFFFFFFFG-D--D---*H*UUVF-B1F*H---B**RLVVD--CEJN**LVD"
# 	},
# 	"pair8":{
# 		"0":"FGGDKNBB3B-BBBBBBB-BB**-FFHGDDH*--BDRHHRRDRDMBG------BGBB----------GCOORRIIII--I---I-I-I",
# 		"3":"FGGDKNBB-BHBBBBBBBLBB--HFF--DD--EJB----------B-JJJJJNB-BBB26NB*HWMBG---------B5ID35I5I5I"
# 	},
# 	"pair9":{
# 		"4":"FGGDKNHIGDDG-B-BBFH-HBFBBDBF--DDVBU*A****************HW*F-HB***-*RR---",
# 		"9":"FGGDKN------VBVBB--BHB-BB-BFFFDD---------------------H---3H----W*--G36"
# 	}
# }

#consolidated trunc 100
# pairs ={
# 	"pair1":{
# 		"8":"FGGDKNHB8-0DDGBBBVBVB-B-H---DEJNFGGDKNCCCBDBEV*VB9DFBHFDBDDTFV4DBBBI4DAAAHDDIYDADAHBNDMBAAAAAAAAAAAAAAAAAA",
# 		"9":"FGGDKNH-8C0DDGBBBV-VBFBBHFFBDEJNFGGDKNCCCBDBEV*VB9DFBHFDBDDTFV4DBBBI4DAAAHDDIYDADAHBNDMB----AAAAAAAAAAAAAA"
# 	},
# 	"pair2":{
# 		"8":"FGGDKN-------HB8-0DDGBBBVBVBBHDEJNFGGDKNCCCBD---BEV*VB9DFBHFDBDDTFV4DBBBI4DAAAHDDIYDADAHBNDMBAAAAAAAAAAAAAAAAAA",
# 		"4":"FGGDKNEBPBBBB-B8C0DDGBBBV-VBBHDEJNFGGDKNCCCBDBBBBEV*VB9DFBHFDBDDTFV4D---I4DAAAHDDIYDADAHBNDMBAAAAAAAAAAAA------"
# 	},
#    "pair3":{
# 		"4":"FGGDKNEBPBBBBB8C0DDGBBBVVBBHDEJNFGGDKNCCCBDBBB-BEV*VB9DFBHFDBDDTFV4DI4DAAAHDDIYDADAHBNDMBAAAAAAAAAAAA----------------------------------",
# 		"6":"FGGDKN-------B8-0DDGBBB--BBHDEJNFGGDKN---B-BBBDBE---B9DFBHFDBDDTF-4DI4D---HDDIYD-D-HBNDMB------------BGDDDHWW3BHDEBDBBBHBBBBBBBBBBBBBBB"
# 	},
# 	"pair4":{
# 		"4":"FGGDKNEBPBBBBB8C0-------------------DDG-------BB---B-VVBBHD-EJN---------FGGDKNCCCBDB---BBBEV*VB9DFBHFDBDDTFV4DI4DAAA---HDDIYDADAHBNDMBAAAAAAAAAAAA------------",
# 		"5":"FGGDKN-B-BBBBB---BBHHEFFFFFFFFFFFFHGDD-*H*UUVFBB1FHBLVV---DCEJN**LVDJN26FGGDKN---B-BEEEBBB----B---B---B---F---------EKEH--------HB---B------------EBFFFEFFFFFF"
# 	},
	
# 	"pair5":{
# 		"2":"FGGDKNB----------H----------BBBB-B--9D-BHHB--BG-----------------B3--MBGB3***FFGDD-----BG-D-BIF8-B--HZ7QD26---------------",
# 		"6":"FGGDKNB80DDGBBBBBHDEJNFGGDKNBBBBDBEB9DFB-H-FDB-DDTF4DI4DHDDIYDDHB-NDMB-B------GDDDHWW3B-HDEB---DBBBH------BBBBBBBBBBBBBBB"
# 	},
# 	"pair6":{
# 		"1":"FGGDKNFFBBHBFFDNEXBBBB9D-HHBBGB--B---*----GDD-GFDDFFSSSSSSSSSSSSSS--F-------2*6",
# 		"2":"FGGDKN---BHB------BBBB9DBHHBBGB3MBGB3***FFGDDBG--D----------------BIF8BHZ7QD2-6"
# 	},
# 	"pair7":{
# 		"0":"FGGDKNB-B3BBBB--B--BB-B--B-B-**-FFHGDDH*BDRHHRRDRDMBGBGBBGCOORRIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIDAI-I-------DAI--",
# 		"2":"FGGDKNBHB-BBBB9DBHHBBGB3MBGB3***FF-G-----------D-D------BG----------------------------------------------D--BIF8BHZ7QD--26"
# 	},
# 	"pair8":{
# 		"2":"FGGDKNBHBBBB--B9DBHHBBGB3MBGB3***-FFGDDBGDBIF8BHZ7QD2--------6",
# 		"7":"FGGDKN------VVB--B-HBB-B--B-B----BFF---B--B-F------D-DH3HW*G36"
# 	},
# 	"pair9":{
# 		"3":"FGGDKN--BH-HBBFHBBBBHG-----DD---W*FFUMBGB5555555555555555555555555555555555555555555555555555555555555555555555--",
# 		"7":"FGGDKNVVB-BHBB--BBBB--FFBBFDDH3HW*-----G-----------------------------------------------------------------------36"
# 	}
# }

def addGap(seq, position):
    return seq[:position] + '-'+seq[position:]


#Send sequence pairs in dictionary (pair1 to pair 10 in order)
def msaGen(pairs):
      
    #Initialize msa with 1st pair
    
    msa = {} 
    
    for pairsKey in pairs:
        if(pairsKey == "pair1"):
            msa = pairs[pairsKey]
        else:
            pairSeqList = list(pairs[pairsKey].keys())
            print(pairSeqList)
            # If First seq in pair is present in msa
            if(pairSeqList[0] in msa):
                refSeq = 0
                addSeq = 1
            else:
                refSeq = 1 
                addSeq = 0
            
            msaSeqLen = len(msa[pairSeqList[refSeq]])
            pairSeqLen = len(pairs[pairsKey][pairSeqList[refSeq]])
            print(msa[pairSeqList[refSeq]])
            print(pairs[pairsKey][pairSeqList[refSeq]])
            seqLength = max(msaSeqLen,pairSeqLen)
            i=0
            print("Index of pair:"+pairSeqList[refSeq])
            msaSeqStr = msa[pairSeqList[refSeq]]
            print(msaSeqLen)
            print(pairSeqLen)
            while ((i < msaSeqLen) or (i < pairSeqLen)):
                msaSeqStr = msa[pairSeqList[refSeq]]
                pairSeqStr = pairs[pairsKey][pairSeqList[refSeq]]
                if(i== pairSeqLen):
                    numberOfGaps = msaSeqLen-pairSeqLen
                    gapsAdded=0
                    newSeqToBeAdded=pairs[pairsKey][pairSeqList[addSeq]]
                    while (gapsAdded < numberOfGaps):
                        newSeqToBeAdded = newSeqToBeAdded + "-"
                        gapsAdded = gapsAdded+1
                    pairs[pairsKey][pairSeqList[addSeq]]=newSeqToBeAdded
                    break
                else:
                    if(i == msaSeqLen):
                        numberOfGaps = pairSeqLen - msaSeqLen
                        for msaKey in msa:
                            msaSeqStri = msa[msaKey] 
                            gapsAdded=0
                            while (gapsAdded < numberOfGaps):
                                msaSeqStri = msaSeqStri + "-"
                                gapsAdded = gapsAdded+1
                            msa[msaKey]=msaSeqStri
                        break
                        
                            
                if (msaSeqStr[i] == pairSeqStr[i]):
                    i=i+1
                else:
                    if (msa[pairSeqList[refSeq]][i] =='-'): 
                        pairs[pairsKey][pairSeqList[refSeq]]=addGap(pairSeqStr,i)
                        pairs[pairsKey][pairSeqList[addSeq]]=addGap(pairs[pairsKey][pairSeqList[addSeq]],i)
                        pairSeqLen=pairSeqLen+1
                        print(pairSeqLen)
                    else:
                        for msaKey in msa:
                            msa[msaKey]=addGap(msa[msaKey],i)
                        msaSeqLen=msaSeqLen+1
                    i=i+1
            msa[pairSeqList[addSeq]]=pairs[pairsKey][pairSeqList[addSeq]]
                    
    msaFile = open("./data/msa/"+virusFamily+"_msa.txt", "w")
    for finalKey in sorted(msa):                
        msaFile.write(msa[finalKey]+"\n")
    
msaGen(pairs)




    